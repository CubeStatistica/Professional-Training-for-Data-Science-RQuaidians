ggtitle("Count of Kingdom")
V_name <- occurence %>% group_by(vernacularName) %>% count()%>% arrange(desc(n))
perc(V_name)
vname  <- V_name %>% ungroup() %>% top_n(6, n)
perc(vname)
occurence$vernacularName[occurence$vernacularName == ""] <- NA
occurence$vernacularName <- occurence$vernacularName %>%  as.character() %>% replace_na("na")
V_name <- occurence %>% group_by(vernacularName) %>% count()%>% arrange(desc(n))
perc(V_name)
occurence %>% select(vernacularName)%>% n_distinct()
vname  <- V_name %>% ungroup() %>% top_n(6, n)
perc(vname)
ggplot(data = vname, aes(x= vernacularName , y=n ))+
geom_bar(stat= "identity",  fill = "dark green")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of top 6 VernaculerNames")
S_data <- occurence %>% group_by(sex) %>% count()%>% arrange(desc(n))
perc(S_data)
occurence %>% select(sex)%>% n_distinct()
ggplot(data = S_data, aes(x= sex , y=n ))+
geom_bar(stat= "identity",  fill = "dark green")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Sex")
country_data <- occurence %>% group_by(country) %>% count()%>% arrange(desc(n))
perc(country_data)
country_data  <- country_data %>% ungroup() %>% top_n(6, n)
perc(country_data)
ggplot(data = country_data, aes(x= country , y=n ))+
geom_bar(stat= "identity",  fill = "dark green")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count top 6 Countires")
FC_data <- occurence%>% group_by(family,country) %>%count()%>% arrange(desc(n))
perc(FC_data)
FC_data  <- FC_data %>% ungroup() %>% top_n(6, n)
perc(FC_data)
ggplot(FC_data, aes(x = n, y = family, fill = country)) +
geom_bar(stat="identity")+
scale_fill_brewer( palette = "Set2")+
geom_text(aes(label = n), vjust = -0.2, position = "stack")+
ggtitle("Count of country for Every Type of family")
FK_data <- occurence %>% group_by(family, kingdom)%>% count()%>% arrange(desc(n))
perc(FK_data)
FK_data  <- FK_data %>% ungroup() %>% top_n(6, n) %>% arrange(desc(n))
perc(FK_data)
ggplot(FK_data, aes(x = n, y = family, fill = kingdom)) +
geom_bar(stat="identity")+
scale_fill_brewer( palette = "Set2")+
geom_text(aes(label = n), vjust = -0.2, position = "stack")+
ggtitle("Count of Kingdom for Every Type of family")
VF_data <- occurence %>% group_by(vernacularName, family)%>% count()%>% arrange(desc(n))
perc(VF_data)
VF_data  <- VF_data %>% ungroup() %>% top_n(6, n) %>% arrange(desc(n))
perc(VF_data)
ggplot(VF_data, aes(x = n, y = family, fill = vernacularName)) +
geom_bar(stat="identity")+
scale_fill_brewer( palette = "RdBu")+
geom_text(aes(label = n), vjust = -0.2, position = "stack")+
ggtitle("Count of vernacular Name for Every Type of family")
KS_data <- occurence %>% group_by(kingdom,sex) %>% count()%>% arrange(desc(n))
perc(KS_data)
ggplot(KS_data, aes(x = kingdom, y = n, fill = sex)) +
geom_bar(stat="identity")+
scale_fill_brewer( palette = "RdBu")+
geom_text(aes(label = n), vjust = -0.2, position = "stack")+
ggtitle("Count of Kingdom for Every Sex type")
KI_data <- occurence %>% group_by(kingdom,individualCount) %>% count()%>% arrange(desc(n))
perc(KI_data)
KI_data  <- KI_data %>% ungroup() %>% top_n(6, individualCount) %>% arrange(desc(n))
perc(KI_data)
ggplot(KI_data, aes(x = individualCount, y =n, fill= kingdom)) +
geom_bar(stat="identity")+
geom_text(aes(label = n), vjust = -0.2, position = "stack")+
ggtitle("Count of kingdom for every individual Count")
FI_data <- occurence %>% group_by(family ,individualCount) %>% count() %>% arrange(desc(individualCount))
perc(FI_data)
FI_data  <- FI_data %>% ungroup() %>% top_n(6, individualCount) %>% arrange(desc(n))
perc(FI_data)
ggplot(FI_data, aes(x = n, y =individualCount, fill=family)) +
geom_bar(stat="identity")+
scale_fill_brewer( palette = "RdBu")+
geom_text(aes(label = individualCount), vjust = -0.2, position = "stack")+
ggtitle("Count of family for every individual Count")
data <- aggregate(eventDate ~ individualCount, data = occurence, FUN = "max")
ggplot(data, aes(x = eventDate, y = individualCount)) + geom_line(color = "blue")+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
perc <- function(data) {
percent <- data %>% ungroup() %>% mutate(Percentage = (n/sum(n))*100)
return(percent)
}
library(tidyverse)
library(formattable)
library(leaflet)
df_Course <- read_csv("Data/Data - DS C1 Course.csv")
data_Age <- df_Course %>% group_by(Age)%>% count()%>% arrange(desc(n))
perc(data_Age)
Age_Name  <- data_Age %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Age_Name)
ggplot(data = Age_Name, aes(x= n, y= Age ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Age")
data_Platform <- df_Course %>% group_by(`How and where did you hear about this course?`)%>% count()%>% arrange(desc(n))
perc(data_Platform)
Platform_Name  <- data_Platform %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Platform_Name)
ggplot(data = Platform_Name, aes(x= n, y= `How and where did you hear about this course?` ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of How and where did you hear about this course?")
data_City <- df_Course %>% group_by(`Which City are you currently residing in?`)%>% count()%>% arrange(desc(n))
perc(data_City)
df_Course <- df_Course %>% mutate(City = case_when(`Which City are you currently residing in?` == 'Karachi' ~'Karachi',
`Which City are you currently residing in?` == 'karachi' ~'Karachi',
`Which City are you currently residing in?` == 'Peshawar' ~'Peshawar',
`Which City are you currently residing in?` == 'KARACHI' ~'Karachi',
`Which City are you currently residing in?` == 'Islamabad' ~'Islamabad',
`Which City are you currently residing in?` == 'ISLAMABAD' ~'Islamabad',
`Which City are you currently residing in?` == 'islamabad' ~'Islamabad',
`Which City are you currently residing in?` == 'LAHORE' ~'Lahore',
`Which City are you currently residing in?` == 'Lahore' ~'Lahore',
`Which City are you currently residing in?` == 'Nowshera' ~'Nowshera',
`Which City are you currently residing in?` == 'Rawalpindi' ~'Rawalpindi',
`Which City are you currently residing in?` == 'Abbottabad' ~'Abbottabad',
`Which City are you currently residing in?` == 'Abbottabad Pakistan' ~'Abbottabad',
`Which City are you currently residing in?` == 'Ariana' ~'Ariana',
`Which City are you currently residing in?` == 'Batkhela, Malakand' ~'Batkhela',
`Which City are you currently residing in?` == 'Calgary' ~'Calgary',
`Which City are you currently residing in?` == 'Chakwal' ~'Chakwal',
`Which City are you currently residing in?` == 'D.I.Khan' ~'D.I.Khan',
`Which City are you currently residing in?` == 'Denver' ~'Denver',
`Which City are you currently residing in?` == 'Faisalabad' ~'Faisalabad',
`Which City are you currently residing in?` == 'Gilgit' ~'Gilgit',
`Which City are you currently residing in?` == 'Gohenberg' ~'Gohenberg',
`Which City are you currently residing in?` == 'Guelph' ~'Guelph',
`Which City are you currently residing in?` == 'Gujrat' ~'Gujrat',
`Which City are you currently residing in?` == 'Hail' ~'Hail',
`Which City are you currently residing in?` == 'Hyderabad' ~'Hyderabad',
`Which City are you currently residing in?` == 'Jamshoro' ~'Jamshoro',
`Which City are you currently residing in?` == 'Jaranwala' ~'Jaranwala',
`Which City are you currently residing in?` == 'Jeddah' ~'Jeddah',
`Which City are you currently residing in?` == 'Koln' ~'Koln',
`Which City are you currently residing in?` == 'Kushtia' ~'Kushtia',
`Which City are you currently residing in?` == 'Layyah' ~'Layyah',
`Which City are you currently residing in?` == 'Multan' ~'Multan',
`Which City are you currently residing in?` == 'Oakville' ~'Oakville',
`Which City are you currently residing in?` == 'Sheikhupura' ~'Sheikhupura',
`Which City are you currently residing in?` == 'Sialkot' ~'Sialkot',
`Which City are you currently residing in?` == 'Toronto' ~'Toronto',
`Which City are you currently residing in?` == 'NA' ~'na',
`Which City are you currently residing in?` == 'Pakistan' ~'na'))
data_city <- df_Course %>% group_by(City)%>% count()%>% arrange(desc(n))
perc(data_city)
city_Name  <- data_city %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(city_Name)
ggplot(data = city_Name, aes(x= n, y= City ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of City")
data_cStudy <- df_Course %>% group_by(`Are you currently attending University / College?`)%>% count()%>% arrange(desc(n))
perc(data_cStudy)
ggplot(data = data_cStudy, aes(x= n, y= `Are you currently attending University / College?` ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Are you currently attending University / College?")
data_lStudy <- df_Course %>% group_by(`Latest Degree Completed or in Progress?`)%>% count()%>% arrange(desc(n))
perc(data_lStudy)
ggplot(data = data_lStudy, aes(x= n, y= `Latest Degree Completed or in Progress?`))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Latest Degree Completed or in Progress?")
data_Uni <- df_Course %>% group_by(`Name of University or College currently or previously attended?`)%>% count()%>% arrange(desc(n))
perc(data_Uni)
Uni_Name  <- data_Uni %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Uni_Name)
ggplot(data = Uni_Name, aes(x= n, y= `Name of University or College currently or previously attended?`))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Name of University or College")
data_Degree <- df_Course %>% group_by(`Discipline of Degree?`)%>% count()%>% arrange(desc(n))
perc(data_Degree)
df_Course <- df_Course %>% mutate(Paid_Course = case_when(df_Course$`Do you understand that this is a paid course ?...3` == 'Yes' ~'1',
df_Course$`Do you understand that this is a paid course ?...3` == 'yes' ~'1',
df_Course$`Do you understand that this is a paid course ?...3` == 'No' ~'0',
df_Course$`Do you understand that this is a paid course ?...3` == 'no' ~'0'))
data_Paid <- df_Course %>% group_by(Paid_Course)%>% count()%>% arrange(desc(n))
perc(data_Paid)
ggplot(data = data_Paid, aes(x= n, y= Paid_Course))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count ofPaid Course Understanding")
library(rio)
export(df_Course, "Cleaned_CData.csv")
set.seed(1000)
fractionTraining   <- 0.50
fractionValidation <- 0.25
fractionTest       <- 0.25
# Compute sample sizes.
sampleSizeTraining   <- floor(fractionTraining   * nrow(df_Course))
sampleSizeValidation <- floor(fractionValidation * nrow(df_Course))
sampleSizeTest       <- floor(fractionTest       * nrow(df_Course))
indicesTraining    <- sort(sample(seq_len(nrow(df_Course)), size=sampleSizeTraining))
indicesNotTraining <- setdiff(seq_len(nrow(df_Course)), indicesTraining)
indicesValidation  <- sort(sample(indicesNotTraining, size=sampleSizeValidation))
indicesTest        <- setdiff(indicesNotTraining, indicesValidation)
dfTraining   <- df_Course[indicesTraining, ]
nrow(dfTraining)
dfTraining %>% group_by(JobCompleted) %>% count()
set.seed(1000)
dfValidation <- df_Course[indicesValidation, ]
nrow(dfValidation)
dfTest<- jobs_CN[indicesTest, ]
dfTest<- df_Course[indicesTest, ]
nrow(dfTest)
lm_model = lm(Age ~ ., data = dfTraining)
View(dfTraining)
lm_model = lm(Paid_Course ~ ., data = dfTraining)
lm_model = lm(Age ~ `How and where did you hear about this course?`, `Which City are you currently residing in?`, `Are you currently attending University / College?`, `Latest Degree Completed or in Progress?`, `Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
lm_model = lm(Age ~ `How and where did you hear about this course?`, `Which City are you currently residing in?`, ` Are you currently attending University / College?`, `Latest Degree Completed or in Progress?`, `Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
lm_model = lm(Age ~ `How and where did you hear about this course?`, `Which City are you currently residing in?`, `Are you currently attending University / College?`, `Latest Degree Completed or in Progress?`, `Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
lm_model = lm(Age ~ `How and where did you hear about this course?`, `Which City are you currently residing in?`, `Are you currently attending University / College?`,`Latest Degree Completed or in Progress?`, `Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
lm_model = lm(Age ~ dfTraining$`How and where did you hear about this course?`, dfTraining$`Which City are you currently residing in?`, dfTraining$`Are you currently attending University / College?`,dfTraining$`Latest Degree Completed or in Progress?`, dfTraining$`Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
lm_model = lm(Age ~ dfTraining$`How and where did you hear about this course?`, dfTraining$`Which City are you currently residing in?`, dfTraining$`Are you currently attending University / College?`, dfTraining$`Have you taken any foundational course in data science / econometrics / statistics / computer science?`,data = dfTraining)
hear_Course <- dfTraining$`How and where did you hear about this course?`
df_Course <- df_Course %>%
rename("hear_Course" = "How and where did you hear about this course?",
"Degree" = "Latest Degree Completed or in Progress?",
"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Intrets" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".'
)
colnames(df_Course)
df_Course <- df_Course %>%
rename("hear_Course" = "How and where did you hear about this course?",
"Degree" = "Latest Degree Completed or in Progress?",
"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = '`Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
knitr::opts_chunk$set(echo = TRUE)
perc <- function(data) {
percent <- data %>% ungroup() %>% mutate(Percentage = (n/sum(n))*100)
return(percent)
}
library(tidyverse)
library(formattable)
library(leaflet)
df_Course <- read_csv("Data/Data - DS C1 Course.csv")
data_Age <- df_Course %>% group_by(Age)%>% count()%>% arrange(desc(n))
perc(data_Age)
Age_Name  <- data_Age %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Age_Name)
ggplot(data = Age_Name, aes(x= n, y= Age ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Age")
data_Platform <- df_Course %>% group_by(`How and where did you hear about this course?`)%>% count()%>% arrange(desc(n))
perc(data_Platform)
Platform_Name  <- data_Platform %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Platform_Name)
ggplot(data = Platform_Name, aes(x= n, y= `How and where did you hear about this course?` ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of How and where did you hear about this course?")
data_City <- df_Course %>% group_by(`Which City are you currently residing in?`)%>% count()%>% arrange(desc(n))
perc(data_City)
df_Course <- df_Course %>% mutate(City = case_when(`Which City are you currently residing in?` == 'Karachi' ~'Karachi',
`Which City are you currently residing in?` == 'karachi' ~'Karachi',
`Which City are you currently residing in?` == 'Peshawar' ~'Peshawar',
`Which City are you currently residing in?` == 'KARACHI' ~'Karachi',
`Which City are you currently residing in?` == 'Islamabad' ~'Islamabad',
`Which City are you currently residing in?` == 'ISLAMABAD' ~'Islamabad',
`Which City are you currently residing in?` == 'islamabad' ~'Islamabad',
`Which City are you currently residing in?` == 'LAHORE' ~'Lahore',
`Which City are you currently residing in?` == 'Lahore' ~'Lahore',
`Which City are you currently residing in?` == 'Nowshera' ~'Nowshera',
`Which City are you currently residing in?` == 'Rawalpindi' ~'Rawalpindi',
`Which City are you currently residing in?` == 'Abbottabad' ~'Abbottabad',
`Which City are you currently residing in?` == 'Abbottabad Pakistan' ~'Abbottabad',
`Which City are you currently residing in?` == 'Ariana' ~'Ariana',
`Which City are you currently residing in?` == 'Batkhela, Malakand' ~'Batkhela',
`Which City are you currently residing in?` == 'Calgary' ~'Calgary',
`Which City are you currently residing in?` == 'Chakwal' ~'Chakwal',
`Which City are you currently residing in?` == 'D.I.Khan' ~'D.I.Khan',
`Which City are you currently residing in?` == 'Denver' ~'Denver',
`Which City are you currently residing in?` == 'Faisalabad' ~'Faisalabad',
`Which City are you currently residing in?` == 'Gilgit' ~'Gilgit',
`Which City are you currently residing in?` == 'Gohenberg' ~'Gohenberg',
`Which City are you currently residing in?` == 'Guelph' ~'Guelph',
`Which City are you currently residing in?` == 'Gujrat' ~'Gujrat',
`Which City are you currently residing in?` == 'Hail' ~'Hail',
`Which City are you currently residing in?` == 'Hyderabad' ~'Hyderabad',
`Which City are you currently residing in?` == 'Jamshoro' ~'Jamshoro',
`Which City are you currently residing in?` == 'Jaranwala' ~'Jaranwala',
`Which City are you currently residing in?` == 'Jeddah' ~'Jeddah',
`Which City are you currently residing in?` == 'Koln' ~'Koln',
`Which City are you currently residing in?` == 'Kushtia' ~'Kushtia',
`Which City are you currently residing in?` == 'Layyah' ~'Layyah',
`Which City are you currently residing in?` == 'Multan' ~'Multan',
`Which City are you currently residing in?` == 'Oakville' ~'Oakville',
`Which City are you currently residing in?` == 'Sheikhupura' ~'Sheikhupura',
`Which City are you currently residing in?` == 'Sialkot' ~'Sialkot',
`Which City are you currently residing in?` == 'Toronto' ~'Toronto',
`Which City are you currently residing in?` == 'NA' ~'na',
`Which City are you currently residing in?` == 'Pakistan' ~'na'))
data_city <- df_Course %>% group_by(City)%>% count()%>% arrange(desc(n))
perc(data_city)
city_Name  <- data_city %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(city_Name)
ggplot(data = city_Name, aes(x= n, y= City ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of City")
data_cStudy <- df_Course %>% group_by(`Are you currently attending University / College?`)%>% count()%>% arrange(desc(n))
perc(data_cStudy)
ggplot(data = data_cStudy, aes(x= n, y= `Are you currently attending University / College?` ))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Are you currently attending University / College?")
data_lStudy <- df_Course %>% group_by(`Latest Degree Completed or in Progress?`)%>% count()%>% arrange(desc(n))
perc(data_lStudy)
ggplot(data = data_lStudy, aes(x= n, y= `Latest Degree Completed or in Progress?`))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Latest Degree Completed or in Progress?")
data_Uni <- df_Course %>% group_by(`Name of University or College currently or previously attended?`)%>% count()%>% arrange(desc(n))
perc(data_Uni)
Uni_Name  <- data_Uni %>% ungroup() %>% top_n(7, n) %>% arrange(desc(n))
perc(Uni_Name)
ggplot(data = Uni_Name, aes(x= n, y= `Name of University or College currently or previously attended?`))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count of Name of University or College")
data_Degree <- df_Course %>% group_by(`Discipline of Degree?`)%>% count()%>% arrange(desc(n))
perc(data_Degree)
df_Course <- df_Course %>% mutate(Paid_Course = case_when(df_Course$`Do you understand that this is a paid course ?...3` == 'Yes' ~'1',
df_Course$`Do you understand that this is a paid course ?...3` == 'yes' ~'1',
df_Course$`Do you understand that this is a paid course ?...3` == 'No' ~'0',
df_Course$`Do you understand that this is a paid course ?...3` == 'no' ~'0'))
data_Paid <- df_Course %>% group_by(Paid_Course)%>% count()%>% arrange(desc(n))
perc(data_Paid)
ggplot(data = data_Paid, aes(x= n, y= Paid_Course))+
geom_bar(stat= "identity",  fill = "#21B6A8")+
geom_text(aes(label = n), vjust = -0.2)+
ggtitle("Count ofPaid Course Understanding")
library(rio)
export(df_Course, "Cleaned_CData.csv")
df_Course <- df_Course %>%
rename("hear_Course" = "How and where did you hear about this course?",
"Degree" = "Latest Degree Completed or in Progress?",
"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = '`Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
colnames(df_Course)
df_Course <- df_Course %>%
rename(#"hear_Course" = "How and where did you hear about this course?",
#"Degree" = "Latest Degree Completed or in Progress?",
#"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = '`Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
df_Course <- df_Course %>%
rename(#"hear_Course" = "How and where did you hear about this course?",
#"Degree" = "Latest Degree Completed or in Progress?",
#"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
#"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = '`Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
df_Course <- df_Course %>%
rename(#"hear_Course" = "How and where did you hear about this course?",
#"Degree" = "Latest Degree Completed or in Progress?",
#"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
#"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = 'Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
colnames(df_Course)
df_Course <- df_Course %>%
rename("hear_Course" = "How and where did you hear about this course?",
"Degree" = "Latest Degree Completed or in Progress?",
"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = 'Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
df_Course <- df_Course %>%
rename(#"hear_Course" = "How and where did you hear about this course?",
#"Degree" = "Latest Degree Completed or in Progress?",
#"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
#"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
"Uni_Name" = 'Name of University or College currently or previously attended?',
"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
colnames(df_Course)
set.seed(1000)
fractionTraining   <- 0.50
fractionValidation <- 0.25
fractionTest       <- 0.25
# Compute sample sizes.
sampleSizeTraining   <- floor(fractionTraining   * nrow(df_Course))
sampleSizeValidation <- floor(fractionValidation * nrow(df_Course))
sampleSizeTest       <- floor(fractionTest       * nrow(df_Course))
indicesTraining    <- sort(sample(seq_len(nrow(df_Course)), size=sampleSizeTraining))
indicesNotTraining <- setdiff(seq_len(nrow(df_Course)), indicesTraining)
indicesValidation  <- sort(sample(indicesNotTraining, size=sampleSizeValidation))
indicesTest        <- setdiff(indicesNotTraining, indicesValidation)
dfTraining   <- df_Course[indicesTraining, ]
nrow(dfTraining)
dfValidation <- df_Course[indicesValidation, ]
nrow(dfValidation)
dfTest<- df_Course[indicesTest, ]
nrow(dfTest)
df_Course <- df_Course %>%
rename("hear_Course" = "How and where did you hear about this course?",
"Degree" = "Latest Degree Completed or in Progress?",
"Certificate"    = "Have you taken any foundational course in data science / econometrics / statistics / computer science?",
"Lang_of_Interest" = 'What programming language(s) are you most comfortable in (R, Python, Java, JS, etc.)? If none please type "None".',
#"Uni_Name" = 'Name of University or College currently or previously attended?',
#"Experience" ='Prior Work Experience in Data Science or Machine Learning'
)
colnames(df_Course)
set.seed(1000)
fractionTraining   <- 0.50
fractionValidation <- 0.25
fractionTest       <- 0.25
# Compute sample sizes.
sampleSizeTraining   <- floor(fractionTraining   * nrow(df_Course))
sampleSizeValidation <- floor(fractionValidation * nrow(df_Course))
sampleSizeTest       <- floor(fractionTest       * nrow(df_Course))
set.seed(1000)
fractionTraining   <- 0.50
fractionValidation <- 0.25
fractionTest       <- 0.25
# Compute sample sizes.
sampleSizeTraining   <- floor(fractionTraining   * nrow(df_Course))
sampleSizeValidation <- floor(fractionValidation * nrow(df_Course))
sampleSizeTest       <- floor(fractionTest       * nrow(df_Course))
indicesTraining    <- sort(sample(seq_len(nrow(df_Course)), size=sampleSizeTraining))
indicesNotTraining <- setdiff(seq_len(nrow(df_Course)), indicesTraining)
indicesValidation  <- sort(sample(indicesNotTraining, size=sampleSizeValidation))
indicesTest        <- setdiff(indicesNotTraining, indicesValidation)
dfTraining   <- df_Course[indicesTraining, ]
nrow(dfTraining)
dfValidation <- df_Course[indicesValidation, ]
nrow(dfValidation)
dfTest<- df_Course[indicesTest, ]
nrow(dfTest)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Certificate,data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Lang_of_Interest,data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name ,data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Experience, data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Experience , data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Experience , data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Experience , data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Experience , data = dfTraining)
lm_model = lm(Age ~ hear_Course, Degree, Uni_Name, Lang_of_Interest , data = dfTraining)
lm_model = glm(Age ~ hear_Course, Degree, Uni_Name, Lang_of_Interest , data = dfTraining)
lm_model = glm(Paid_Course ~ hear_Course, Degree, Uni_Name, Lang_of_Interest , data = dfTraining)
lm_model = glm(Paid_Course ~ hear_Course, Uni_Name, Lang_of_Interest , data = dfTraining)
lm_model = glm(Paid_Course ~ hear_Course, Uni_Name, Lang_of_Interest , data = dfTraining)
lm_model = glm(Age ~ hear_Course, data = dfTraining)
lm_model = lm(Age ~ hear_Course, data = dfTraining)
lm_model = lm(Age ~Degree, data = dfTraining)
lm_model = lm(Age ~ Degree, data = dfTraining)
lm_model = lm(Degree ~ Age, data = dfTraining)
lm_model = lm(. ~ Age, data = dfTraining)
lm_model = lm(Degree,Uni_Name ~ Age, data = dfTraining)
lm_model = lm(Age ~ Degree,Uni_Name, data = dfTraining)
Train <- lapply(dfTraining, as.factor)
lm_model = lm(Age ~ Degree,Uni_Name, data = Train)
View(lm_model)
View(lm_model)
p1 <- predict(lm_model, Train, type = 'response')
head(p1)
Train <- lapply(dfTraining, as.factor)
lm_model = lm(Age ~ Degree,Uni_Name,Certificate, data = Train)
Train <- lapply(dfTraining, as.factor)
lm_model = lm(Age ~ Degree,Uni_Name, data = Train)
p1 <- predict(lm_model, Train, type = 'response')
head(p1)
p1 <- predict(lm_model, Train, type = 'response')
head(p1)
p1 <- predict(lm_model, dfTest, type = 'response')
head(p1)
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(Predicted = pred1, Actual = Train$Age)
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(Predicted = pred1, Actual = train$admit)
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(Predicted = pred1, Actual = )
p1 <- predict(lm_model, Train, type = 'response')
head(p1)
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(Predicted = pred1, Actual = Train$Age)
tab1
Train <- lapply(dfTraining, as.factor)
lm_model = glm(Paid_Course ~ Degree,Uni_Name, data = Train)
Train <- lapply(dfTraining, as.factor)
lm_model = glm(Paid_Course ~ Degree,Uni_Name, data = Train, family = "binomial")
Train <- lapply(dfTraining, as.factor)
lm_model = glm(Paid_Course ~ Degree,Uni_Name, data = dfTraining, family = "binomial")
lm_model = glm(Paid_Course ~ Degree,Uni_Name, data = dfTraining, family = "binomial")
Train <- lapply(dfTraining, as.numeric)
lm_model = glm(Paid_Course ~ Degree,Uni_Name, data = Train, family = "binomial")
View(Train)
p1 <- predict(lm_model, dfTest, type = 'response')
(p1)
